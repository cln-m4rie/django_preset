version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.7.5
        environment:
          DJANGO_SETTINGS_MODULE: config.settings.development
          DB_NAME: main
          DB_USER: user
          DB_PASSWORD: password
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
      - image: circleci/mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_DATABASE: test_main
          MYSQL_USER: user
          MYSQL_ROOT_HOST: "%"
          MYSQL_PASSWORD: password


    working_directory: ~

    steps:
      - checkout

      # Download and cache dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pipenv
            pipenv lock -r > requirements.txt
            pip install -r requirements.txt
      - run:
          name: install dockerize
          command: |
            [ ! -f /usr/local/bin/dockerize ] && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            true
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: initialize db
          command: |
            . venv/bin/activate
            python manage.py makemigrations
            python manage.py migrate

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports